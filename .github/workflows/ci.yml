name: CI/CD Pipeline

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main]

env:
  JAVA_VERSION: "21"
  JAVA_DISTRIBUTION: "temurin"

jobs:
  test:
    name: 🧪 Test & Quality Gates
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: 📦 Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 🔧 Validate Maven wrapper
        run: |
          chmod +x mvnw
          ./mvnw --version

      - name: 🛡️ Maven Enforcer Plugin validation
        run: ./mvnw validate

      - name: 🏗️ Compile project
        run: ./mvnw clean compile test-compile

      - name: 🧪 Run unit tests
        run: ./mvnw test

      - name: 🏛️ Architecture validation (ArchUnit)
        run: ./mvnw -pl infrastructure test -Dtest=ArchitectureTest

      - name: 📊 Generate test coverage
        run: ./mvnw jacoco:report

      - name: 🧬 Mutation testing (Domain)
        run: ./mvnw -pl domain org.pitest:pitest-maven:mutationCoverage

      - name: 📈 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./domain/target/site/jacoco/jacoco.xml
          flags: domain
          name: domain-coverage

      - name: 📈 Upload infrastructure coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./infrastructure/target/site/jacoco/jacoco.xml
          flags: infrastructure
          name: infrastructure-coverage

      - name: 🎯 Quality Gates Check
        run: |
          echo "🔍 Checking quality metrics..."

          # Check if mutation coverage report exists
          if [ -f "domain/target/pit-reports/*/mutations.xml" ]; then
            echo "✅ Mutation testing completed successfully"
          else
            echo "❌ Mutation testing failed to generate report"
            exit 1
          fi

          # Verify architecture tests passed (they would fail the build if not)
          echo "✅ Architecture tests passed"

          # Check test count (we expect 175+ tests)
          TEST_COUNT=$(./mvnw test -q | grep -E "Tests run:" | tail -1 | grep -o "Tests run: [0-9]*" | grep -o "[0-9]*" || echo "0")
          echo "🧪 Total tests run: $TEST_COUNT"

          if [ "$TEST_COUNT" -lt 170 ]; then
            echo "❌ Test count too low: $TEST_COUNT (expected >170)"
            exit 1
          fi

          echo "🎉 All quality gates passed!"

  build:
    name: 🏗️ Build & Package
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: 📦 Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 🔧 Validate Maven wrapper
        run: |
          chmod +x mvnw

      - name: 🚀 Package application
        run: ./mvnw clean package -DskipTests

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jar-artifact
          path: infrastructure/target/*.jar
          retention-days: 30

      - name: 📊 Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            domain/target/surefire-reports/
            infrastructure/target/surefire-reports/
            domain/target/pit-reports/
          retention-days: 30

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: 📦 Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 🔍 Run dependency check
        run: |
          # Install OWASP dependency check plugin
          ./mvnw org.owasp:dependency-check-maven:check
        continue-on-error: true

      - name: 📊 Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: target/dependency-check-report.html
          retention-days: 30
        if: always()

  documentation:
    name: 📚 Generate Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    needs: [test, build]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: 📦 Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 📖 Generate JavaDoc
        run: |
          ./mvnw javadoc:aggregate
          mkdir -p docs/javadoc
          cp -r target/site/apidocs/* docs/javadoc/

      - name: 🧬 Copy mutation testing reports
        run: |
          mkdir -p docs/mutation-testing
          if [ -d "domain/target/pit-reports" ]; then
            cp -r domain/target/pit-reports/* docs/mutation-testing/
          fi

      - name: 📊 Copy test coverage reports
        run: |
          mkdir -p docs/coverage
          if [ -d "domain/target/site/jacoco" ]; then
            cp -r domain/target/site/jacoco/* docs/coverage/domain/
          fi
          if [ -d "infrastructure/target/site/jacoco" ]; then
            cp -r infrastructure/target/site/jacoco/* docs/coverage/infrastructure/
          fi

      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          publish_branch: gh-pages

      - name: 📊 Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/
          retention-days: 90
